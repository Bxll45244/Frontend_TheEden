// EmployeeListWrapper.jsx
import React, { useState, useMemo } from "react";
// тнРя╕П р╕Хр╣Йр╕нр╕З import useOutletContext
import { useOutletContext, useNavigate } from "react-router-dom"; 
// тнРя╕П Import EmployeeList р╣Ар╕Фр╕┤р╕б
import EmployeePage from "./EmployeePage"; 

export default function EmployeeList() {
    // тнРя╕П р╕Фр╕╢р╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕лр╕ер╕▒р╕Бр╣Бр╕ер╕░ handlers р╕Ир╕▓р╕Б AdminDashboard (Outlet Context)
    const { employees, loading } = useOutletContext();
    const navigate = useNavigate();

    // ЁЯТб State р╕кр╕│р╕лр╕гр╕▒р╕Ър╕Бр╕▓р╕гр╕Др╣Йр╕Щр╕лр╕▓р╣Бр╕ер╕░р╕Бр╕гр╕нр╕З (р╕вр╣Йр╕▓р╕вр╕бр╕▓р╕Ир╕▓р╕Б AdminDashboard)
    const [searchTerm, setSearchTerm] = useState("");
    const [selectedRole, setSelectedRole] = useState("All");

    // ЁЯТб Logic р╣Гр╕Щр╕Бр╕▓р╕гр╕Бр╕гр╕нр╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕е (р╣Гр╕Кр╣Й useMemo р╣Ар╕Юр╕╖р╣Ир╕нр╕Ыр╕гр╕░р╕кр╕┤р╕Чр╕Шр╕┤р╕ар╕▓р╕Ю)
    const filteredEmployees = useMemo(() => {
        if (!employees) return [];
        return employees.filter(emp => {
            const matchesRole = selectedRole === "All" || emp.role === selectedRole;
            const matchesSearch = emp.name.toLowerCase().includes(searchTerm.toLowerCase());
            return matchesRole && matchesSearch;
        });
    }, [employees, searchTerm, selectedRole]);

    // ЁЯТб Handler р╕кр╕│р╕лр╕гр╕▒р╕Ър╕Щр╕│р╕Чр╕▓р╕Зр╣Др╕Ыр╕лр╕Щр╣Йр╕▓р╕гр╕▓р╕вр╕ер╕░р╣Ар╕нр╕╡р╕вр╕Ф
    const handleEmployeeClick = (employee) => {
        navigate(`/admin/detail/${employee._id}`); 
    };

    if (loading) {
        return <div className="text-center p-8 text-xl">р╕Бр╕│р╕ер╕▒р╕Зр╣Вр╕лр╕ер╕Фр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Юр╕Щр╕▒р╕Бр╕Зр╕▓р╕Щ...</div>;
    }

    // ЁЯТб р╕Ир╕▒р╕Фр╕Бр╕▓р╕г UI р╕кр╕│р╕лр╕гр╕▒р╕Ър╕Бр╕▓р╕гр╕Др╣Йр╕Щр╕лр╕▓/р╕Бр╕гр╕нр╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕е
    return (
        <div className="p-4 bg-white rounded-xl shadow-lg">
            {/* тнРя╕П р╕кр╣Ир╕зр╕Щр╕Др╣Йр╕Щр╕лр╕▓/р╕Бр╕гр╕нр╕З (р╕Др╕╕р╕Ур╕нр╕▓р╕Ир╕Хр╣Йр╕нр╕Зр╕кр╕гр╣Йр╕▓р╕З Component р╣Бр╕вр╕Бр╕кр╕│р╕лр╕гр╕▒р╕Ър╕кр╕┤р╣Ир╕Зр╕Щр╕╡р╣Й) тнРя╕П */}
            <div className="mb-6 flex justify-between items-center">
                <input 
                    type="text"
                    placeholder="р╕Др╣Йр╕Щр╕лр╕▓р╕Кр╕╖р╣Ир╕нр╕Юр╕Щр╕▒р╕Бр╕Зр╕▓р╕Щ..."
                    className="p-2 border rounded-lg w-1/3"
                    value={searchTerm}
                    onChange={(e) => setSearchTerm(e.target.value)}
                />
                <select 
                    className="p-2 border rounded-lg"
                    value={selectedRole}
                    onChange={(e) => setSelectedRole(e.target.value)}
                >
                    <option value="All">р╕Чр╕╕р╕Бр╕Хр╕│р╣Бр╕лр╕Щр╣Ир╕З</option>
                    {/* р╕Фр╕╢р╕З Role р╕Чр╕╡р╣Ир╕бр╕╡р╕нр╕вр╕╣р╣Ир╕Ир╕гр╕┤р╕Зр╕бр╕▓р╣Бр╕кр╕Фр╕З */}
                    {Array.from(new Set(employees.map(e => e.role))).map(role => (
                        <option key={role} value={role}>{role}</option>
                    ))}
                </select>
            </div>
            
            {/* тнРя╕П р╕кр╣Ир╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Чр╕╡р╣Ир╕Цр╕╣р╕Бр╕Бр╕гр╕нр╕Зр╣Бр╕ер╕░ Handler р╣Ар╕Вр╣Йр╕▓р╣Др╕Ыр╣Ар╕Ыр╣Зр╕Щ prop тнРя╕П */}
            <EmployeePage 
                employees={filteredEmployees} 
                onClickEmployee={handleEmployeeClick} 
            />
        </div>
    );
}